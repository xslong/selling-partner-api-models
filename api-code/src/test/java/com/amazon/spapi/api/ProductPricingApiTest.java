/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.api;

import com.amazon.spapi.ApiException;
import com.amazon.spapi.model.productpricing.GetOffersResponse;
import com.amazon.spapi.model.productpricing.GetPricingResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductPricingApi
 */
@Ignore
public class ProductPricingApiTest {

    private final ProductPricingApi api = new ProductPricingApi();

    
    /**
     * 
     *
     * Returns competitive pricing information for a seller&#39;s offer listings based on seller SKU or ASIN.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompetitivePricingTest() throws ApiException {
        String marketplaceId = null;
        String itemType = null;
        List<String> asins = null;
        List<String> skus = null;
        GetPricingResponse response = api.getCompetitivePricing(marketplaceId, itemType, asins, skus);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns the lowest priced offers for a single item based on ASIN.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemOffersTest() throws ApiException {
        String marketplaceId = null;
        String itemCondition = null;
        String asin = null;
        GetOffersResponse response = api.getItemOffers(marketplaceId, itemCondition, asin);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns the lowest priced offers for a single SKU listing.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getListingOffersTest() throws ApiException {
        String marketplaceId = null;
        String itemCondition = null;
        String sellerSKU = null;
        GetOffersResponse response = api.getListingOffers(marketplaceId, itemCondition, sellerSKU);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns pricing information for a seller&#39;s offer listings based on seller SKU or ASIN.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPricingTest() throws ApiException {
        String marketplaceId = null;
        String itemType = null;
        List<String> asins = null;
        List<String> skus = null;
        String itemCondition = null;
        GetPricingResponse response = api.getPricing(marketplaceId, itemType, asins, skus, itemCondition);

        // TODO: test validations
    }
    
}
